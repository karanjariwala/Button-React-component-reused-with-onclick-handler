class Button extends React.Component {   
 
  render(){
    const { onClickFunction, incrementValue} = this.props
    return (
      <button onClick={()=>{ console.log('Button'+incrementValue+ this.state);
          onClickFunction(incrementValue)}}>
        +{incrementValue}
        </button>
    );
  };
}

const Result = ({counter}) =>{
  return (<div>{counter}</div>)
}

class App extends React.Component{
    state={ counter: 0 };
  incrementCounter = (incrementValue) => {
    console.log('app'+this.props.incrementValue+this.state.counter)
    this.setState((prevState) => ({counter: prevState.counter + incrementValue}))
  };
  render(){
    return (
      <div>
    
        <Button incrementValue={1} onClickFunction={this.incrementCounter}/>
        <Button incrementValue={2} onClickFunction={this.incrementCounter}/>
        <Button incrementValue={3} onClickFunction={this.incrementCounter}/>
            <Result counter={this.state.counter}/>
        </div>
    )
  }

}



ReactDOM.render(<App/>, document.getElementById('app'));